{
  "openapi": "3.0.0",
  "info": {
    "title": "GEPP Platform - BMA Integration API",
    "version": "1.0.0",
    "description": "\n# BMA Integration API Documentation\n\nWelcome to the GEPP Platform BMA Integration API. This documentation is specifically designed for Bangkok Metropolitan Administration (BMA) integration partners.\n\n## Getting Started\n\n### 1. Authentication\n\nFirst, obtain an integration token using your credentials:\n\n```bash\nPOST /api/auth/integration\n{\n  \"email\": \"your@email.com\",\n  \"password\": \"your_password\"\n}\n```\n\nThe token expires in **7 days** and is tagged as 'integration' type.\n\n### 2. Using the Token\n\nInclude the token in all API requests:\n\n```\nAuthorization: Bearer <your_integration_token>\n```\n\n### 3. Available Operations\n\n- **Submit Transactions**: Upload waste transaction data\n- **Query Transactions**: Retrieve transaction details with pagination\n- **Check Audit Status**: Monitor AI audit processing status\n- **View Usage**: Track API usage statistics\n\n## Integration Workflow\n\n```\n1. Authenticate \u2192 Get integration token (7-day validity)\n2. Submit transactions \u2192 POST /api/integration/bma/transaction\n3. Monitor status \u2192 GET /api/integration/bma/audit_status\n4. Retrieve results \u2192 GET /api/integration/bma/transaction\n5. Track usage \u2192 GET /api/integration/bma/usage\n```\n\n## Support\n\nFor technical support or questions, please contact:\n- Email: support@gepp.com\n- Documentation: https://docs.gepp.com/integration/bma\n            ",
    "contact": {
      "name": "GEPP Platform BMA Integration Support",
      "email": "support@gepp.com"
    }
  },
  "servers": [
    {
      "url": "/dev",
      "description": "Dev Environment (Relative)"
    },
    {
      "url": "https://api.geppdata.com/dev",
      "description": "Production - Dev Environment"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Integration authentication endpoints"
    },
    {
      "name": "BMA Transactions",
      "description": "Waste transaction management for BMA integration"
    },
    {
      "name": "BMA Monitoring",
      "description": "Audit status and usage monitoring"
    }
  ],
  "paths": {
    "/api/auth/integration": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Integration login (7-day token)",
        "description": "Authenticate for integration purposes using email and password. Returns long-lived token (7 days) tagged as 'integration' type. The JWT token is signed with user's unique secret key (auto-generated on first login if not exists). Use this for external system integrations.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationLoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Integration login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationLoginResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/api/integration/bma/audit_status": {
      "get": {
        "tags": [
          "BMA Integration"
        ],
        "summary": "Get audit status summary",
        "description": "\nGet a summary of transaction audit statuses for the past year.\n\nThis endpoint returns:\n- Total number of transactions in the past year\n- Breakdown of AI audit statuses (not_audit, queued, approved, rejected)\n- Breakdown of actual transaction statuses (pending, approved, rejected)\n\nFilters:\n- Only includes transactions from the past 365 days\n- Only includes active transactions (deleted_date is NULL)\n- Scoped to the authenticated user's organization\n                ",
        "operationId": "getBmaAuditStatusSummary",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Audit status summary retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BmaAuditStatusResponse"
                },
                "example": {
                  "success": true,
                  "data": {
                    "start_date": "2024-10-27",
                    "num_transactions": 150,
                    "ai_audit": {
                      "not_audit": 45,
                      "queued": 30,
                      "approved": 50,
                      "rejected": 25
                    },
                    "actual_status": {
                      "pending": 60,
                      "approved": 70,
                      "rejected": 20
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/integration/bma/usage": {
      "get": {
        "tags": [
          "BMA Integration"
        ],
        "summary": "Get subscription usage information",
        "description": "\nGet current subscription usage limits and consumption for the organization.\n\nThis endpoint returns:\n- Transaction creation limits and current usage\n- AI audit limits and current usage\n\nUseful for checking remaining quota before creating transactions.\n                ",
        "operationId": "getBmaSubscriptionUsage",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription usage information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BmaUsageResponse"
                },
                "example": {
                  "success": true,
                  "data": {
                    "subscription_usage": {
                      "create_transaction_limit": 100,
                      "create_transaction_usage": 45,
                      "ai_audit_limit": 10,
                      "ai_audit_usage": 3
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/integration/bma/transaction": {
      "get": {
        "tags": [
          "BMA Integration"
        ],
        "summary": "Get list of transactions with pagination",
        "description": "\nGet a paginated list of transactions filtered by query parameters, sorted by ID in ascending order.\n\n**Response Structure:**\nReturns transactions in nested format organized by:\n- transaction_version (ext_id_1)\n- origin_id\n- house_id (ext_id_2)\n- audit (status, ai_audit, overall_violations, materials)\n  - materials (general, organic, recyclable, hazardous)\n\n**Sorting:**\n- Transactions are sorted by **house_id (ext_id_2)** in ascending order\n\n**Pagination:**\n- Use `page` and `limit` parameters for pagination\n- Response includes pagination metadata: page, limit, total, total_pages, has_next, has_prev\n\n**Query Parameters:**\n- `limit`: Number of transactions per page (default: 100, max: 1000)\n- `page`: Page number (default: 1, starts from 1)\n- `transaction_version`: Filter by transaction version (ext_id_1)\n- `origin_id`: Filter by origin ID (default: 2170)\n\n**Example:**\n- Page 1: `GET /api/integration/bma/transaction?page=1&limit=100`\n- Page 2: `GET /api/integration/bma/transaction?page=2&limit=100`\n                ",
        "operationId": "getBmaTransactions",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of transactions to return per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000,
              "minimum": 1
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (starts from 1)",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1,
              "example": 1
            }
          },
          {
            "name": "transaction_version",
            "in": "query",
            "description": "Filter by transaction version (ext_id_1)",
            "required": false,
            "schema": {
              "type": "string",
              "example": "v2025-Q4"
            }
          },
          {
            "name": "origin_id",
            "in": "query",
            "description": "Filter by origin ID",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 2170,
              "example": 2170
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BmaTransactionListResponse"
                },
                "example": {
                  "success": true,
                  "data": {
                    "transactions": {
                      "v2025-Q4": {
                        "2170": {
                          "00000000001": {
                            "audit": {
                              "status": "approved",
                              "ai_audit": "approved",
                              "overall_violations": [],
                              "materials": {
                                "general": {
                                  "image_url": "https://s3.example.com/general.jpg",
                                  "violations": []
                                },
                                "organic": {
                                  "image_url": "https://s3.example.com/organic.jpg",
                                  "violations": []
                                },
                                "recyclable": {
                                  "image_url": "https://s3.example.com/recyclable.jpg",
                                  "violations": []
                                },
                                "hazardous": {
                                  "image_url": "https://s3.example.com/hazardous.jpg",
                                  "violations": []
                                }
                              }
                            }
                          },
                          "00000000002": {
                            "audit": {
                              "status": "rejected",
                              "ai_audit": "rejected",
                              "overall_violations": [
                                "Incomplete transaction: Missing required material types"
                              ],
                              "materials": {
                                "general": {
                                  "image_url": "https://s3.example.com/general2.jpg",
                                  "violations": [
                                    "Image-material mismatch: Appears to be hazardous waste"
                                  ]
                                },
                                "organic": {
                                  "image_url": null,
                                  "violations": []
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "origins": {
                      "2170": "BMA Collection Center"
                    },
                    "pagination": {
                      "page": 1,
                      "limit": 100,
                      "total": 2,
                      "total_pages": 1,
                      "has_next": false,
                      "has_prev": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "BMA Integration"
        ],
        "summary": "Process BMA transaction batch",
        "description": "\nProcess a batch of waste transactions from the BMA (Bangkok Metropolitan Administration) system.\n\nThis endpoint allows BMA systems to:\n- Create new transactions with waste material data\n- Update existing transactions identified by transaction_version and house_id\n- Automatically match and link material records to transactions\n\n**Transaction Matching:**\n- Transactions are matched using `ext_id_1` (transaction_version) and `ext_id_2` (house_id)\n- If a match is found, the transaction is updated\n- If no match is found, a new transaction is created\n\n**Material Types:**\n- `general` - General Waste (material_id: 94)\n- `organic` - Food and Plant Waste (material_id: 77)\n- `recyclable` - Non-Specific Recyclables (material_id: 298)\n- `hazardous` - Non-Specific Hazardous Waste (material_id: 113)\n                ",
        "operationId": "processBmaTransactionBatch",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Batch of BMA transactions organized by version and house ID",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BmaTransactionBatch"
              },
              "examples": {
                "single_house": {
                  "summary": "Single house with multiple materials",
                  "value": {
                    "batch": {
                      "v2025-Q1": {
                        "2170": {
                          "HOUSE-001": {
                            "timestamp": "2025-10-23T08:30:00+07:00",
                            "material": {
                              "general": {
                                "image_url": "https://s3.example.com/bma/house001-general.jpg"
                              },
                              "recyclable": {
                                "image_url": "https://s3.example.com/bma/house001-recyclable.jpg"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "multiple_houses": {
                  "summary": "Multiple houses and versions",
                  "value": {
                    "batch": {
                      "v2025-Q1": {
                        "2170": {
                          "HOUSE-001": {
                            "timestamp": "2025-10-23T08:30:00+07:00",
                            "material": {
                              "general": {
                                "image_url": "https://s3.example.com/bma/house001-general.jpg"
                              }
                            }
                          },
                          "HOUSE-002": {
                            "timestamp": "2025-10-23T09:15:00+07:00",
                            "material": {
                              "organic": {
                                "image_url": "https://s3.example.com/bma/house002-organic.jpg"
                              },
                              "hazardous": {
                                "image_url": "https://s3.example.com/bma/house002-hazardous.jpg"
                              }
                            }
                          }
                        }
                      },
                      "v2025-Q2": {
                        "2170": {
                          "HOUSE-003": {
                            "timestamp": "2025-10-23T10:00:00+07:00",
                            "material": {
                              "recyclable": {
                                "image_url": "https://s3.example.com/bma/house003-recyclable.jpg"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch processed successfully (may include partial errors)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BmaTransactionBatchResponse"
                },
                "examples": {
                  "all_success": {
                    "summary": "All transactions processed successfully",
                    "value": {
                      "success": true,
                      "data": {
                        "success": true,
                        "message": "Processed 3 transactions",
                        "results": {
                          "processed": 3,
                          "created": 2,
                          "updated": 1,
                          "errors": []
                        },
                        "subscription_usage": {
                          "create_transaction_limit": 100,
                          "create_transaction_usage": 45,
                          "ai_audit_limit": 10,
                          "ai_audit_usage": 3
                        }
                      }
                    }
                  },
                  "partial_success": {
                    "summary": "Some transactions failed",
                    "value": {
                      "success": true,
                      "data": {
                        "success": true,
                        "message": "Processed 2 transactions",
                        "results": {
                          "processed": 2,
                          "created": 1,
                          "updated": 1,
                          "errors": [
                            {
                              "transaction_version": "v2025-Q1",
                              "house_id": "HOUSE-004",
                              "error": "Invalid timestamp format"
                            }
                          ]
                        },
                        "subscription_usage": {
                          "create_transaction_limit": 100,
                          "create_transaction_usage": 45,
                          "ai_audit_limit": 10,
                          "ai_audit_usage": 3
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/integration/bma/transaction/{transaction_version}/{house_id}": {
      "get": {
        "tags": [
          "BMA Integration"
        ],
        "summary": "Get specific transaction by IDs",
        "description": "\nGet a specific transaction by transaction_version (ext_id_1) and house_id (ext_id_2).\n\nReturns transaction in the same nested format as the list endpoint:\n- transaction_version (ext_id_1)\n- origin_id\n- house_id (ext_id_2)\n- material_name\n\nAlso includes origin names mapping.\n                ",
        "operationId": "getBmaTransactionByIds",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "transaction_version",
            "in": "path",
            "description": "Transaction version (ext_id_1)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "v2025-Q4"
            }
          },
          {
            "name": "house_id",
            "in": "path",
            "description": "House ID (ext_id_2)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "00000000001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BmaTransactionGetResponse"
                },
                "example": {
                  "success": true,
                  "data": {
                    "transactions": {
                      "v2025-Q4": {
                        "2170": {
                          "00000000001": {
                            "audit": {
                              "status": "approved",
                              "ai_audit": "approved",
                              "overall_violations": [],
                              "materials": {
                                "general": {
                                  "image_url": "https://s3.example.com/general.jpg",
                                  "violations": []
                                },
                                "organic": {
                                  "image_url": "https://s3.example.com/organic.jpg",
                                  "violations": []
                                },
                                "recyclable": {
                                  "image_url": "https://s3.example.com/recyclable.jpg",
                                  "violations": []
                                },
                                "hazardous": {
                                  "image_url": "https://s3.example.com/hazardous.jpg",
                                  "violations": []
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "origins": {
                      "2170": "BMA Collection Center"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Transaction not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "success": false,
                  "message": "Transaction not found: v2025-Q4/00000000001"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Integration JWT token obtained from /api/auth/integration (7-day validity)"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "Error message"
          },
          "error_code": {
            "type": "string",
            "example": "ERROR_CODE"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "IntegrationLoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User password",
            "example": "your_password"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "auth_token": {
            "type": "string",
            "description": "Short-lived authentication token (15 minutes)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "refresh_token": {
            "type": "string",
            "description": "Long-lived refresh token (7 days)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "token_type": {
            "type": "string",
            "example": "Bearer"
          },
          "expires_in": {
            "type": "integer",
            "description": "Token expiration time in seconds",
            "example": 900
          },
          "user": {
            "$ref": "#/components/schemas/UserInfo"
          }
        }
      },
      "UserInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "displayName": {
            "type": "string",
            "example": "John Doe"
          },
          "organizationId": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "BmaAuditStatusResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "start_date": {
                "type": "string",
                "format": "date",
                "description": "Start date for the summary (today - 1 year)",
                "example": "2024-10-27"
              },
              "num_transactions": {
                "type": "integer",
                "description": "Total number of transactions in the period",
                "example": 150
              },
              "ai_audit": {
                "type": "object",
                "description": "Breakdown of AI audit statuses",
                "properties": {
                  "not_audit": {
                    "type": "integer",
                    "description": "Number of transactions not yet audited by AI",
                    "example": 45
                  },
                  "queued": {
                    "type": "integer",
                    "description": "Number of transactions queued for AI audit",
                    "example": 30
                  },
                  "approved": {
                    "type": "integer",
                    "description": "Number of transactions approved by AI audit",
                    "example": 50
                  },
                  "rejected": {
                    "type": "integer",
                    "description": "Number of transactions rejected by AI audit",
                    "example": 25
                  }
                }
              },
              "actual_status": {
                "type": "object",
                "description": "Breakdown of actual transaction statuses",
                "properties": {
                  "pending": {
                    "type": "integer",
                    "description": "Number of transactions with pending status",
                    "example": 60
                  },
                  "approved": {
                    "type": "integer",
                    "description": "Number of transactions with approved status",
                    "example": 70
                  },
                  "rejected": {
                    "type": "integer",
                    "description": "Number of transactions with rejected status",
                    "example": 20
                  }
                }
              }
            }
          }
        }
      },
      "BmaUsageResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "subscription_usage": {
                "$ref": "#/components/schemas/BmaSubscriptionUsage"
              }
            }
          }
        }
      },
      "BmaTransactionBatchResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "success": {
                "type": "boolean",
                "example": true
              },
              "message": {
                "type": "string",
                "example": "Processed 3 transactions"
              },
              "results": {
                "$ref": "#/components/schemas/BmaTransactionResults"
              },
              "subscription_usage": {
                "$ref": "#/components/schemas/BmaSubscriptionUsage"
              }
            }
          }
        }
      },
      "BmaTransactionListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "transactions": {
                "type": "object",
                "description": "Nested structure: transaction_version > origin_id > house_id > material_name > material data",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/BmaMaterialAudit"
                      }
                    }
                  }
                }
              },
              "origins": {
                "type": "object",
                "description": "Mapping of origin_id to location name",
                "additionalProperties": {
                  "type": "string"
                },
                "example": {
                  "2170": "BMA Collection Center"
                }
              },
              "pagination": {
                "type": "object",
                "description": "Pagination information",
                "properties": {
                  "page": {
                    "type": "integer",
                    "description": "Current page number",
                    "example": 1
                  },
                  "limit": {
                    "type": "integer",
                    "description": "Number of items per page",
                    "example": 100
                  },
                  "total": {
                    "type": "integer",
                    "description": "Total number of items",
                    "example": 250
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "example": 3
                  },
                  "has_next": {
                    "type": "boolean",
                    "description": "Whether there is a next page",
                    "example": true
                  },
                  "has_prev": {
                    "type": "boolean",
                    "description": "Whether there is a previous page",
                    "example": false
                  }
                }
              }
            }
          }
        }
      },
      "BmaTransactionGetResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "transactions": {
                "type": "object",
                "description": "Nested structure: transaction_version > origin_id > house_id > material_name > material data",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/BmaMaterialAudit"
                      }
                    }
                  }
                }
              },
              "origins": {
                "type": "object",
                "description": "Mapping of origin_id to location name",
                "additionalProperties": {
                  "type": "string"
                },
                "example": {
                  "2170": "BMA Collection Center"
                }
              }
            }
          }
        }
      },
      "BmaMaterialAudit": {
        "type": "object",
        "properties": {
          "image_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "URL to the material image (first image from images array, null if not available)",
            "example": "https://s3.example.com/general.jpg"
          },
          "audit": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "description": "Transaction status",
                "enum": [
                  "pending",
                  "approved",
                  "rejected"
                ],
                "example": "approved"
              },
              "ai_audit_status": {
                "type": "string",
                "description": "AI audit status",
                "enum": [
                  "null",
                  "queued",
                  "approved",
                  "rejected"
                ],
                "example": "approved"
              },
              "violations": {
                "type": "array",
                "description": "List of audit violations",
                "items": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Violation message",
                      "example": "Incomplete transaction: Missing required material types"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Authentication required or token invalid/expired",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "success": false,
              "message": "Invalid token or insufficient permissions",
              "error_code": "UNAUTHORIZED"
            }
          }
        }
      },
      "BadRequestError": {
        "description": "Invalid request parameters",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "success": false,
              "message": "Invalid request format",
              "error_code": "BAD_REQUEST"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "success": false,
              "message": "Internal server error",
              "error_code": "INTERNAL_ERROR"
            }
          }
        }
      }
    }
  }
}