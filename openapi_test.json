{
  "openapi": "3.0.0",
  "info": {
    "title": "GEPP Platform API",
    "version": "1.0.0",
    "description": "\n# GEPP Platform API Documentation\n\nThe GEPP Platform provides a comprehensive API for waste management, sustainability reporting, and compliance tracking.\n\n## Authentication\n\nMost endpoints require JWT authentication. Include your token in the Authorization header:\n\n```\nAuthorization: Bearer <your_jwt_token>\n```\n\n## API Structure\n\nThe API is organized into the following modules:\n\n- **Auth** - Authentication and user management\n- **Organizations** - Organization and location management\n- **Users** - User profile and permissions\n- **Materials** - Material catalog and categories\n- **Transactions** - Waste transaction tracking\n- **Audit** - Transaction auditing and compliance\n- **Reports** - Analytics and reporting\n- **Integration** - External system integrations\n\n## Deployment States\n\nThe API supports multiple deployment environments:\n- `dev` - Development environment\n- `staging` - Staging environment\n- `prod` - Production environment\n\nAccess the API at: `/{deployment_state}/api/*`\n            ",
    "contact": {
      "name": "GEPP Platform Support",
      "email": "support@gepp.com"
    },
    "license": {
      "name": "Proprietary",
      "url": "https://gepp.com/license"
    }
  },
  "servers": [
    {
      "url": "/dev",
      "description": "Relative URL - Dev Environment"
    },
    {
      "url": "https://api.geppdata.com/dev",
      "description": "Production - Dev Environment"
    },
    {
      "url": "http://localhost:3000/dev",
      "description": "Local Development - Dev Environment"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token obtained from /api/auth/login"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "Error message"
          },
          "error_code": {
            "type": "string",
            "example": "ERROR_CODE"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Operation successful"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "SecurePassword123"
          }
        }
      },
      "IntegrationLoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User password",
            "example": "your_password"
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "required": [
          "email",
          "password",
          "firstName",
          "lastName"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "newuser@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "SecurePassword123"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "phoneNumber": {
            "type": "string",
            "example": "+66812345678"
          },
          "displayName": {
            "type": "string",
            "example": "John Doe"
          },
          "accountType": {
            "type": "string",
            "example": "organization"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "auth_token": {
            "type": "string",
            "description": "Short-lived authentication token (15 minutes)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "refresh_token": {
            "type": "string",
            "description": "Long-lived refresh token (7 days)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "token_type": {
            "type": "string",
            "example": "Bearer"
          },
          "expires_in": {
            "type": "integer",
            "description": "Token expiration time in seconds",
            "example": 900
          },
          "user": {
            "$ref": "#/components/schemas/UserInfo"
          }
        }
      },
      "IntegrationLoginResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "token": {
            "type": "string",
            "description": "Long-lived integration token (7 days) with 'integration' type tag",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "token_type": {
            "type": "string",
            "example": "Bearer"
          },
          "expires_in": {
            "type": "integer",
            "description": "Token expiration time in seconds (7 days = 604800)",
            "example": 604800
          },
          "user": {
            "$ref": "#/components/schemas/UserInfo"
          }
        }
      },
      "TokenValidationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "user": {
            "$ref": "#/components/schemas/UserInfo"
          }
        }
      },
      "IntegrationSecretResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Integration secret key generated successfully"
          },
          "secret": {
            "type": "string",
            "description": "Your integration secret key - keep this safe!",
            "example": "abc123def456ghi789jkl012mno345pqr678stu901vwx234yz"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 1
              },
              "email": {
                "type": "string",
                "example": "user@example.com"
              }
            }
          }
        }
      },
      "UserInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "displayName": {
            "type": "string",
            "example": "John Doe"
          },
          "organizationId": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "BmaMaterialData": {
        "type": "object",
        "properties": {
          "image_url": {
            "type": "string",
            "format": "uri",
            "description": "URL to the waste material image",
            "example": "https://s3.example.com/bma/house001-general.jpg"
          }
        }
      },
      "BmaHouseData": {
        "type": "object",
        "required": [
          "timestamp",
          "material"
        ],
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "ISO 8601 datetime with timezone when the waste was collected",
            "example": "2025-10-23T08:30:00+07:00"
          },
          "material": {
            "type": "object",
            "description": "Material data keyed by material type (general, organic, recyclable, hazardous)",
            "additionalProperties": {
              "$ref": "#/components/schemas/BmaMaterialData"
            },
            "example": {
              "general": {
                "image_url": "https://s3.example.com/bma/house001-general.jpg"
              },
              "recyclable": {
                "image_url": "https://s3.example.com/bma/house001-recyclable.jpg"
              }
            }
          }
        }
      },
      "BmaOriginData": {
        "type": "object",
        "description": "Houses grouped under an origin_id (must be 2170)",
        "additionalProperties": {
          "$ref": "#/components/schemas/BmaHouseData"
        },
        "example": {
          "HOUSE-001": {
            "timestamp": "2025-10-23T08:30:00+07:00",
            "material": {
              "general": {
                "image_url": "https://s3.example.com/bma/house001-general.jpg"
              }
            }
          },
          "HOUSE-002": {
            "timestamp": "2025-10-23T09:15:00+07:00",
            "material": {
              "organic": {
                "image_url": "https://s3.example.com/bma/house002-organic.jpg"
              }
            }
          }
        }
      },
      "BmaTransactionVersion": {
        "type": "object",
        "description": "Origins grouped under a transaction version",
        "additionalProperties": {
          "$ref": "#/components/schemas/BmaOriginData"
        },
        "example": {
          "2170": {
            "HOUSE-001": {
              "timestamp": "2025-10-23T08:30:00+07:00",
              "material": {
                "general": {
                  "image_url": "https://s3.example.com/bma/house001-general.jpg"
                }
              }
            }
          }
        }
      },
      "BmaTransactionBatch": {
        "type": "object",
        "required": [
          "batch"
        ],
        "properties": {
          "batch": {
            "type": "object",
            "description": "Batch of transactions organized by version, then by house ID",
            "additionalProperties": {
              "$ref": "#/components/schemas/BmaTransactionVersion"
            },
            "example": {
              "v2025-Q1": {
                "2170": {
                  "HOUSE-001": {
                    "timestamp": "2025-10-23T08:30:00+07:00",
                    "material": {
                      "general": {
                        "image_url": "https://s3.example.com/bma/house001-general.jpg"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "BmaTransactionError": {
        "type": "object",
        "properties": {
          "transaction_version": {
            "type": "string",
            "description": "The transaction version that failed",
            "example": "v2025-Q1"
          },
          "house_id": {
            "type": "string",
            "description": "The house ID that failed",
            "example": "HOUSE-001"
          },
          "error": {
            "type": "string",
            "description": "Error message",
            "example": "Invalid timestamp format"
          }
        }
      },
      "BmaTransactionResults": {
        "type": "object",
        "properties": {
          "processed": {
            "type": "integer",
            "description": "Total number of house transactions processed",
            "example": 3
          },
          "created": {
            "type": "integer",
            "description": "Number of new transactions created",
            "example": 2
          },
          "updated": {
            "type": "integer",
            "description": "Number of existing transactions updated",
            "example": 1
          },
          "errors": {
            "type": "array",
            "description": "List of errors encountered during processing",
            "items": {
              "$ref": "#/components/schemas/BmaTransactionError"
            }
          }
        }
      },
      "BmaSubscriptionUsage": {
        "type": "object",
        "properties": {
          "create_transaction_limit": {
            "type": "integer",
            "description": "Maximum number of transactions allowed to create",
            "example": 100
          },
          "create_transaction_usage": {
            "type": "integer",
            "description": "Current number of transactions created",
            "example": 45
          },
          "ai_audit_limit": {
            "type": "integer",
            "description": "Maximum number of AI audits allowed",
            "example": 10
          },
          "ai_audit_usage": {
            "type": "integer",
            "description": "Current number of AI audits used",
            "example": 3
          }
        }
      },
      "BmaTransactionBatchResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "success": {
                "type": "boolean",
                "example": true
              },
              "message": {
                "type": "string",
                "example": "Processed 3 transactions"
              },
              "results": {
                "$ref": "#/components/schemas/BmaTransactionResults"
              },
              "subscription_usage": {
                "$ref": "#/components/schemas/BmaSubscriptionUsage"
              }
            }
          }
        }
      },
      "BmaUsageResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "subscription_usage": {
                "$ref": "#/components/schemas/BmaSubscriptionUsage"
              }
            }
          }
        }
      },
      "BmaAuditStatusResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "start_date": {
                "type": "string",
                "format": "date",
                "description": "Start date for the summary (today - 1 year)",
                "example": "2024-10-27"
              },
              "num_transactions": {
                "type": "integer",
                "description": "Total number of transactions in the period",
                "example": 150
              },
              "ai_audit": {
                "type": "object",
                "description": "Breakdown of AI audit statuses",
                "properties": {
                  "not_audit": {
                    "type": "integer",
                    "description": "Number of transactions not yet audited by AI",
                    "example": 45
                  },
                  "queued": {
                    "type": "integer",
                    "description": "Number of transactions queued for AI audit",
                    "example": 30
                  },
                  "approved": {
                    "type": "integer",
                    "description": "Number of transactions approved by AI audit",
                    "example": 50
                  },
                  "rejected": {
                    "type": "integer",
                    "description": "Number of transactions rejected by AI audit",
                    "example": 25
                  }
                }
              },
              "actual_status": {
                "type": "object",
                "description": "Breakdown of actual transaction statuses",
                "properties": {
                  "pending": {
                    "type": "integer",
                    "description": "Number of transactions with pending status",
                    "example": 60
                  },
                  "approved": {
                    "type": "integer",
                    "description": "Number of transactions with approved status",
                    "example": 70
                  },
                  "rejected": {
                    "type": "integer",
                    "description": "Number of transactions with rejected status",
                    "example": 20
                  }
                }
              }
            }
          }
        }
      },
      "BmaAuditQueueResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "transactions_queued": {
                "type": "integer",
                "description": "Number of transactions added to the audit queue",
                "example": 45
              },
              "message": {
                "type": "string",
                "description": "Success message",
                "example": "Successfully added 45 transactions to audit queue"
              }
            }
          }
        }
      },
      "BmaMaterialAudit": {
        "type": "object",
        "properties": {
          "image_url": {
            "type": [
              "string",
              "null"
            ],
            "description": "URL to the material image (first image from images array, null if not available)",
            "example": "https://s3.example.com/general.jpg"
          },
          "audit": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "description": "Transaction status",
                "enum": [
                  "pending",
                  "approved",
                  "rejected"
                ],
                "example": "approved"
              },
              "ai_audit_status": {
                "type": "string",
                "description": "AI audit status",
                "enum": [
                  "null",
                  "queued",
                  "approved",
                  "rejected"
                ],
                "example": "approved"
              },
              "violations": {
                "type": "array",
                "description": "List of audit violations",
                "items": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Violation message",
                      "example": "Incomplete transaction: Missing required material types"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "BmaTransactionListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "transactions": {
                "type": "object",
                "description": "Nested structure: transaction_version > origin_id > house_id > material_name > material data",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/BmaMaterialAudit"
                      }
                    }
                  }
                }
              },
              "origins": {
                "type": "object",
                "description": "Mapping of origin_id to location name",
                "additionalProperties": {
                  "type": "string"
                },
                "example": {
                  "2170": "BMA Collection Center"
                }
              },
              "count": {
                "type": "integer",
                "description": "Total number of transactions returned",
                "example": 100
              }
            }
          }
        }
      },
      "BmaTransactionGetResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "transactions": {
                "type": "object",
                "description": "Nested structure: transaction_version > origin_id > house_id > material_name > material data",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/BmaMaterialAudit"
                      }
                    }
                  }
                }
              },
              "origins": {
                "type": "object",
                "description": "Mapping of origin_id to location name",
                "additionalProperties": {
                  "type": "string"
                },
                "example": {
                  "2170": "BMA Collection Center"
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Authentication required or token invalid",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "success": false,
              "message": "Invalid token",
              "error_code": "UNAUTHORIZED"
            }
          }
        }
      },
      "NotFoundError": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "success": false,
              "message": "Resource not found",
              "error_code": "NOT_FOUND"
            }
          }
        }
      },
      "BadRequestError": {
        "description": "Invalid request parameters",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "success": false,
              "message": "Invalid request",
              "error_code": "BAD_REQUEST"
            }
          }
        }
      },
      "ValidationError": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "success": false,
              "message": "Validation failed",
              "error_code": "VALIDATION_ERROR",
              "errors": [
                "Email already registered"
              ]
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "success": false,
              "message": "Internal server error",
              "error_code": "INTERNAL_ERROR"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication and authorization endpoints"
    },
    {
      "name": "Organizations",
      "description": "Organization and location management"
    },
    {
      "name": "Users",
      "description": "User management and profiles"
    },
    {
      "name": "Materials",
      "description": "Material catalog and categories"
    },
    {
      "name": "Transactions",
      "description": "Waste transaction tracking and management"
    },
    {
      "name": "Audit",
      "description": "Transaction auditing and compliance"
    },
    {
      "name": "Reports",
      "description": "Analytics and reporting"
    },
    {
      "name": "Integration",
      "description": "External system integrations"
    },
    {
      "name": "BMA Integration",
      "description": "Bangkok Metropolitan Administration integration"
    }
  ],
  "paths": {
    "/api/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User login (15-minute token)",
        "description": "Authenticate user with email and password. Returns short-lived auth token (15 min) and refresh token (7 days).",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/api/auth/integration": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Integration login (7-day token)",
        "description": "Authenticate for integration purposes using email and password. Returns long-lived token (7 days) tagged as 'integration' type. The JWT token is signed with user's unique secret key (auto-generated on first login if not exists). Use this for external system integrations.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationLoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Integration login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationLoginResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/api/auth/integration/secret": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Generate integration secret key",
        "description": "Generate or regenerate integration secret key for the authenticated user. Requires authentication with regular auth token. Keep this secret safe - it's used for integration authentication.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Secret key generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationSecretResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register new user",
        "description": "Register a new user account with organization",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Registration successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      }
    },
    "/api/auth/validate": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Validate token (from header)",
        "description": "Validate JWT token from Authorization header",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token is valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenValidationResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Validate token (from body)",
        "description": "Validate JWT token from request body",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token"
                ],
                "properties": {
                  "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token is valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenValidationResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Refresh auth token",
        "description": "Get new auth token using refresh token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "refresh_token"
                ],
                "properties": {
                  "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/api/integration/bma/audit_status": {
      "get": {
        "tags": [
          "BMA Integration"
        ],
        "summary": "Get audit status summary",
        "description": "\nGet a summary of transaction audit statuses for the past year.\n\nThis endpoint returns:\n- Total number of transactions in the past year\n- Breakdown of AI audit statuses (not_audit, queued, approved, rejected)\n- Breakdown of actual transaction statuses (pending, approved, rejected)\n\nFilters:\n- Only includes transactions from the past 365 days\n- Only includes active transactions (deleted_date is NULL)\n- Scoped to the authenticated user's organization\n                ",
        "operationId": "getBmaAuditStatusSummary",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Audit status summary retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BmaAuditStatusResponse"
                },
                "example": {
                  "success": true,
                  "data": {
                    "start_date": "2024-10-27",
                    "num_transactions": 150,
                    "ai_audit": {
                      "not_audit": 45,
                      "queued": 30,
                      "approved": 50,
                      "rejected": 25
                    },
                    "actual_status": {
                      "pending": 60,
                      "approved": 70,
                      "rejected": 20
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/integration/bma/usage": {
      "get": {
        "tags": [
          "BMA Integration"
        ],
        "summary": "Get subscription usage information",
        "description": "\nGet current subscription usage limits and consumption for the organization.\n\nThis endpoint returns:\n- Transaction creation limits and current usage\n- AI audit limits and current usage\n\nUseful for checking remaining quota before creating transactions.\n                ",
        "operationId": "getBmaSubscriptionUsage",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription usage information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BmaUsageResponse"
                },
                "example": {
                  "success": true,
                  "data": {
                    "subscription_usage": {
                      "create_transaction_limit": 100,
                      "create_transaction_usage": 45,
                      "ai_audit_limit": 10,
                      "ai_audit_usage": 3
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/integration/bma/add_transactions_to_audit_queue": {
      "post": {
        "tags": [
          "BMA Integration"
        ],
        "summary": "Add transactions to AI audit queue",
        "description": "\nAdd all transactions with ai_audit_status = 'null' to the AI audit queue.\n\nThis endpoint:\n- Updates all non-audited transactions to 'queued' status\n- Uses optimized raw SQL for bulk updates\n- Only affects transactions in the authenticated user's organization\n- Only affects active transactions (deleted_date is NULL)\n\n**Use Case:**\nTrigger AI auditing for all pending transactions that haven't been queued yet.\n                ",
        "operationId": "addTransactionsToAuditQueue",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions successfully added to audit queue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BmaAuditQueueResponse"
                },
                "example": {
                  "success": true,
                  "data": {
                    "transactions_queued": 45,
                    "message": "Successfully added 45 transactions to audit queue"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/integration/bma/transaction": {
      "get": {
        "tags": [
          "BMA Integration"
        ],
        "summary": "Get list of transactions",
        "description": "\nGet a list of transactions filtered by query parameters.\n\nReturns transactions in nested format organized by:\n- transaction_version (ext_id_1)\n- origin_id\n- house_id (ext_id_2)\n- material_name\n\nAlso includes origin names mapping for convenience.\n\n**Query Parameters:**\n- `limit`: Number of transactions to return (default: 100, max: 1000)\n- `transaction_version`: Filter by transaction version\n- `origin_id`: Filter by origin ID (default: 2170)\n                ",
        "operationId": "getBmaTransactions",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of transactions to return",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000,
              "minimum": 1
            }
          },
          {
            "name": "transaction_version",
            "in": "query",
            "description": "Filter by transaction version (ext_id_1)",
            "required": false,
            "schema": {
              "type": "string",
              "example": "v2025-Q4"
            }
          },
          {
            "name": "origin_id",
            "in": "query",
            "description": "Filter by origin ID",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 2170,
              "example": 2170
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BmaTransactionListResponse"
                },
                "example": {
                  "success": true,
                  "data": {
                    "transactions": {
                      "v2025-Q4": {
                        "2170": {
                          "00000000001": {
                            "audit": {
                              "status": "approved",
                              "ai_audit": "approved",
                              "overall_violations": [],
                              "materials": {
                                "general": {
                                  "image_url": "https://s3.example.com/general.jpg",
                                  "violations": []
                                },
                                "organic": {
                                  "image_url": "https://s3.example.com/organic.jpg",
                                  "violations": []
                                },
                                "recyclable": {
                                  "image_url": "https://s3.example.com/recyclable.jpg",
                                  "violations": []
                                },
                                "hazardous": {
                                  "image_url": "https://s3.example.com/hazardous.jpg",
                                  "violations": []
                                }
                              }
                            }
                          },
                          "00000000002": {
                            "audit": {
                              "status": "rejected",
                              "ai_audit": "rejected",
                              "overall_violations": [
                                "Incomplete transaction: Missing required material types"
                              ],
                              "materials": {
                                "general": {
                                  "image_url": "https://s3.example.com/general2.jpg",
                                  "violations": [
                                    "Image-material mismatch: Appears to be hazardous waste"
                                  ]
                                },
                                "organic": {
                                  "image_url": null,
                                  "violations": []
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "origins": {
                      "2170": "BMA Collection Center"
                    },
                    "count": 2
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "BMA Integration"
        ],
        "summary": "Process BMA transaction batch",
        "description": "\nProcess a batch of waste transactions from the BMA (Bangkok Metropolitan Administration) system.\n\nThis endpoint allows BMA systems to:\n- Create new transactions with waste material data\n- Update existing transactions identified by transaction_version and house_id\n- Automatically match and link material records to transactions\n\n**Transaction Matching:**\n- Transactions are matched using `ext_id_1` (transaction_version) and `ext_id_2` (house_id)\n- If a match is found, the transaction is updated\n- If no match is found, a new transaction is created\n\n**Material Types:**\n- `general` - General Waste (material_id: 94)\n- `organic` - Food and Plant Waste (material_id: 77)\n- `recyclable` - Non-Specific Recyclables (material_id: 298)\n- `hazardous` - Non-Specific Hazardous Waste (material_id: 113)\n                ",
        "operationId": "processBmaTransactionBatch",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Batch of BMA transactions organized by version and house ID",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BmaTransactionBatch"
              },
              "examples": {
                "single_house": {
                  "summary": "Single house with multiple materials",
                  "value": {
                    "batch": {
                      "v2025-Q1": {
                        "2170": {
                          "HOUSE-001": {
                            "timestamp": "2025-10-23T08:30:00+07:00",
                            "material": {
                              "general": {
                                "image_url": "https://s3.example.com/bma/house001-general.jpg"
                              },
                              "recyclable": {
                                "image_url": "https://s3.example.com/bma/house001-recyclable.jpg"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "multiple_houses": {
                  "summary": "Multiple houses and versions",
                  "value": {
                    "batch": {
                      "v2025-Q1": {
                        "2170": {
                          "HOUSE-001": {
                            "timestamp": "2025-10-23T08:30:00+07:00",
                            "material": {
                              "general": {
                                "image_url": "https://s3.example.com/bma/house001-general.jpg"
                              }
                            }
                          },
                          "HOUSE-002": {
                            "timestamp": "2025-10-23T09:15:00+07:00",
                            "material": {
                              "organic": {
                                "image_url": "https://s3.example.com/bma/house002-organic.jpg"
                              },
                              "hazardous": {
                                "image_url": "https://s3.example.com/bma/house002-hazardous.jpg"
                              }
                            }
                          }
                        }
                      },
                      "v2025-Q2": {
                        "2170": {
                          "HOUSE-003": {
                            "timestamp": "2025-10-23T10:00:00+07:00",
                            "material": {
                              "recyclable": {
                                "image_url": "https://s3.example.com/bma/house003-recyclable.jpg"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch processed successfully (may include partial errors)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BmaTransactionBatchResponse"
                },
                "examples": {
                  "all_success": {
                    "summary": "All transactions processed successfully",
                    "value": {
                      "success": true,
                      "data": {
                        "success": true,
                        "message": "Processed 3 transactions",
                        "results": {
                          "processed": 3,
                          "created": 2,
                          "updated": 1,
                          "errors": []
                        },
                        "subscription_usage": {
                          "create_transaction_limit": 100,
                          "create_transaction_usage": 45,
                          "ai_audit_limit": 10,
                          "ai_audit_usage": 3
                        }
                      }
                    }
                  },
                  "partial_success": {
                    "summary": "Some transactions failed",
                    "value": {
                      "success": true,
                      "data": {
                        "success": true,
                        "message": "Processed 2 transactions",
                        "results": {
                          "processed": 2,
                          "created": 1,
                          "updated": 1,
                          "errors": [
                            {
                              "transaction_version": "v2025-Q1",
                              "house_id": "HOUSE-004",
                              "error": "Invalid timestamp format"
                            }
                          ]
                        },
                        "subscription_usage": {
                          "create_transaction_limit": 100,
                          "create_transaction_usage": 45,
                          "ai_audit_limit": 10,
                          "ai_audit_usage": 3
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/integration/bma/transaction/{transaction_version}/{house_id}": {
      "get": {
        "tags": [
          "BMA Integration"
        ],
        "summary": "Get specific transaction by IDs",
        "description": "\nGet a specific transaction by transaction_version (ext_id_1) and house_id (ext_id_2).\n\nReturns transaction in the same nested format as the list endpoint:\n- transaction_version (ext_id_1)\n- origin_id\n- house_id (ext_id_2)\n- material_name\n\nAlso includes origin names mapping.\n                ",
        "operationId": "getBmaTransactionByIds",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "transaction_version",
            "in": "path",
            "description": "Transaction version (ext_id_1)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "v2025-Q4"
            }
          },
          {
            "name": "house_id",
            "in": "path",
            "description": "House ID (ext_id_2)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "00000000001"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BmaTransactionGetResponse"
                },
                "example": {
                  "success": true,
                  "data": {
                    "transactions": {
                      "v2025-Q4": {
                        "2170": {
                          "00000000001": {
                            "audit": {
                              "status": "approved",
                              "ai_audit": "approved",
                              "overall_violations": [],
                              "materials": {
                                "general": {
                                  "image_url": "https://s3.example.com/general.jpg",
                                  "violations": []
                                },
                                "organic": {
                                  "image_url": "https://s3.example.com/organic.jpg",
                                  "violations": []
                                },
                                "recyclable": {
                                  "image_url": "https://s3.example.com/recyclable.jpg",
                                  "violations": []
                                },
                                "hazardous": {
                                  "image_url": "https://s3.example.com/hazardous.jpg",
                                  "violations": []
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "origins": {
                      "2170": "BMA Collection Center"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Transaction not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "success": false,
                  "message": "Transaction not found: v2025-Q4/00000000001"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    }
  }
}